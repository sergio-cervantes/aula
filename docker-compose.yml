services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Containerfile
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend-modules:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Containerfile
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - PORT=5000
      - HOST=0.0.0.0
    ports: []
    volumes:
      - ./backend:/app
      - backend-modules:/app/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: []
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb

volumes:
  mongo-data:
    name: mongo-data
  mongo-config:
    name: mongo-config
  frontend-modules:
  backend-modules:
